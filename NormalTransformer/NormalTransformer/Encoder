class Encoder(Model):
    def __init__(self,
                 depth_source,
                 N = 6,
                 h = 8,
                 d_model = 512,
                 d_ff = 2048,
                 p_dropout = 0.1,
                 maxlen = 128):
        super().__init__()
        self.embedding = Embedding(depth_source,
                                   d_model, mask_zero =True)
        self.pe = PositionalEncoding(d_model, maxlen = maxlen)
        self.encoder_layers = [
            EncoderLayer(h = h,
                         d_model = d_model,
                         d_ff = d_ff,
                         p_dropout = p_dropout,
                         maxlen = maxlen) for _ in range(N)
        ]
        
    def call(self, x, mask=None):
        x = self.embedding(x)
        y = self.pe(x)
        for encoder_layer in self.encoder_layers:
            y = encoder_layer(y, mask=mask)
            
        return y
